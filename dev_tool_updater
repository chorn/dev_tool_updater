#!/usr/bin/env bash

#-----------------------------------------------------------------------------
declare dtu_base=$(
  _program="$0"
  case "$_program" in
    (*/*) ;;
    (*) _program=$(command -v -- "$0")
  esac
  [[ -L "$_program" ]] && _program=$(readlink "$_program")
  cd -P -- "$(dirname -- "$_program")" && pwd -P
)

declare dtu_updaters_path="$dtu_base/updaters"
#-----------------------------------------------------------------------------
if [[ ! -d "$dtu_updaters_path" ]] ; then
  echo "$0 could not find '$dtu_updaters_path'"
  exit 1
fi
#-----------------------------------------------------------------------------
declare -a updaters=$(find -s "$dtu_updaters_path" -type f -name '*.sh')

#-----------------------------------------------------------------------------
pretty() {
  local _script="$1"
  local _name=$(basename "$_script")
  [[ "${_name:2:1}" == '_' ]] && _name="${_name:3}"
  echo "${_name%%.sh}"
}
#-----------------------------------------------------------------------------
usage() {
  cat <<USAGE
Usage: ${0##*/} <command> [command...]
  COMMANDS:
  all     Run all updates
USAGE

  for _script in ${updaters[@]} ; do
    echo -n '  '
    pretty "$_script"
  done

  exit 1
}
#-----------------------------------------------------------------------------
broken() {
  local _script="$1"

  echo "$_script doesn't appear to define an 'updater' function"
  exit 1
}
#-----------------------------------------------------------------------------
run_one() {
  local _script="$1"

  if [[ ! -s "$_script" ]] ; then
    echo "$_script is missing or empty."
    exit 1
  fi

  declare updater
  source "$_script"
  declare -fp updater >&/dev/null || broken "$_script"

  updater
}
#-----------------------------------------------------------------------------
run_all() {
  for _script in ${updaters[@]} ; do
    _tmp=$(mktemp)
    echo -ne "$(pretty "$_script") \t>>\t"

    if run_one "$_script" >&"$_tmp" ; then
      echo 'ok'
    else
      echo 'err'
      [[ -s "$_tmp" ]] && cat "$_tmp"
    fi

    rm "$_tmp"
  done
}
#-----------------------------------------------------------------------------
[[ $# -gt 0 ]] || usage

for _command in "$@" ; do
  case "$_command" in
    -h|help) usage ;;
    all) run_all ;;
    *) run_one "$dtu_updaters_path/"??"_${_command}.sh" ;;
  esac
done
